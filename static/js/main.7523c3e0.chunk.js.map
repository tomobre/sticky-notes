{"version":3,"sources":["index.js"],"names":["Note","props","componentWillMount","style","right","randomBetween","window","innerWidth","top","innerHeight","x","y","s","Math","ceil","random","edit","setState","editing","save","onChange","refs","newText","value","id","delete","onRemove","renderForm","className","ref","onClick","renderDisplay","children","state","this","React","Component","ReactDOM","render","document","getElementById","Board","nextID","uniqueID","add","text","notes","note","update","map","remove","filter","eachNote","count"],"mappings":"wNAKMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,mBAAqB,WACnB,EAAKC,MAAQ,CACXC,MAAO,EAAKC,cAAc,EAAGC,OAAOC,WAAa,IAA1C,MACPC,IAAK,EAAKH,cAAc,EAAGC,OAAOG,YAAc,IAA3C,QARU,EAYnBJ,cAAgB,SAACK,EAAGC,EAAGC,GACrB,OAAOF,EAAIG,KAAKC,KAAKD,KAAKE,UAAYJ,EAAID,IAAME,GAb/B,EAgBnBI,KAAO,WACL,EAAKC,SAAS,CAAEC,SAAS,KAjBR,EAmBnBC,KAAO,WACL,EAAKlB,MAAMmB,SAAS,EAAKC,KAAKC,QAAQC,MAAO,EAAKtB,MAAMuB,IACxD,EAAKP,SAAS,CAAEC,SAAS,KArBR,EAuBnBO,OAAS,SAACD,GACR,EAAKvB,MAAMyB,SAAS,EAAKzB,MAAMuB,KAxBd,EA2BnBG,WAAa,WACX,OACE,cAAC,IAAD,UACE,sBAAKC,UAAU,OAAOzB,MAAO,EAAKA,MAAlC,UACE,0BAAU0B,IAAI,YACd,wBAAQC,QAAS,EAAKX,KAAtB,wBAhCW,EAqCnBY,cAAgB,WACd,OACE,cAAC,IAAD,UACE,sBAAKH,UAAU,OAAOzB,MAAO,EAAKA,MAAlC,UACE,4BAAI,EAAKF,MAAM+B,WACf,iCACE,wBAAQF,QAAS,EAAKd,KAAtB,kBACA,wBAAQc,QAAS,EAAKL,OAAtB,wBA1CR,EAAKQ,MAAQ,CAAEf,SAAS,GAFP,E,qDAoDjB,OAAOgB,KAAKD,MAAMf,QAAUgB,KAAKP,aAAeO,KAAKH,oB,GArDtCI,IAAMC,WAwDzBC,IAASC,OACP,cAACtC,EAAD,0BACAuC,SAASC,eAAe,oB,IAGpBC,E,kDACJ,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAMRyC,OAAS,WAEP,OADA,EAAKC,SAAW,EAAKA,UAAY,EAC1B,EAAKA,YATK,EAWnBC,IAAM,SAACC,GACL,IAAIC,EAAK,sBAAO,EAAKb,MAAMa,OAAlB,CAAyB,CAAEtB,GAAI,EAAKkB,SAAUK,KAAMF,KAC7D,EAAK5B,SAAS,CAAE6B,WAbC,EAgBnBE,OAAS,SAAC1B,EAASE,GACjB,IAAIsB,EAAQ,EAAKb,MAAMa,MAAMG,KAAI,SAACF,GAAD,OAC/BA,EAAKvB,KAAOA,EACRuB,EADJ,2BAGSA,GAHT,IAIMA,KAAMzB,OAGd,EAAKL,SAAS,CAAE6B,WAzBC,EA2BnBI,OAAS,SAAC1B,GACR,IAAIsB,EAAQ,EAAKb,MAAMa,MAAMK,QAAO,SAACJ,GAAD,OAAUA,EAAKvB,KAAOA,KAC1D,EAAKP,SAAS,CAAE6B,WA7BC,EAgCnBM,SAAW,SAACL,GACV,OACE,cAAC/C,EAAD,CAEEwB,GAAIuB,EAAKvB,GACTJ,SAAU,EAAK4B,OACftB,SAAU,EAAKwB,OAJjB,SAMGH,EAAKA,MALDA,EAAKvB,KAjCd,EAAKS,MAAQ,CACXa,MAAO,IAHQ,E,qDA4CT,IAAD,OACP,OACE,sBAAKlB,UAAU,QAAf,UACGM,KAAKD,MAAMa,MAAMG,IAAIf,KAAKkB,UAC3B,wBAAQtB,QAAS,kBAAM,EAAKc,OAA5B,sB,GAjDYT,IAAMC,WAuD1BC,IAASC,OACP,cAACG,EAAD,CAAOY,MAAM,OACbd,SAASC,eAAe,qB","file":"static/js/main.7523c3e0.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Draggable from \"react-draggable\";\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editing: false };\n  }\n\n  componentWillMount = () => {\n    this.style = {\n      right: this.randomBetween(0, window.innerWidth - 150, `px`),\n      top: this.randomBetween(0, window.innerHeight - 150, `px`),\n    };\n  };\n\n  randomBetween = (x, y, s) => {\n    return x + Math.ceil(Math.random() * (y - x)) + s;\n  };\n\n  edit = () => {\n    this.setState({ editing: true });\n  };\n  save = () => {\n    this.props.onChange(this.refs.newText.value, this.props.id);\n    this.setState({ editing: false });\n  };\n  delete = (id) => {\n    this.props.onRemove(this.props.id);\n  };\n\n  renderForm = () => {\n    return (\n      <Draggable>\n        <div className=\"note\" style={this.style}>\n          <textarea ref=\"newText\"></textarea>\n          <button onClick={this.save}>Save</button>\n        </div>\n      </Draggable>\n    );\n  };\n  renderDisplay = () => {\n    return (\n      <Draggable>\n        <div className=\"note\" style={this.style}>\n          <p>{this.props.children}</p>\n          <span>\n            <button onClick={this.edit}>Edit</button>\n            <button onClick={this.delete}>X</button>\n          </span>\n        </div>\n      </Draggable>\n    );\n  };\n\n  render() {\n    return this.state.editing ? this.renderForm() : this.renderDisplay();\n  }\n}\nReactDOM.render(\n  <Note>hello world</Note>,\n  document.getElementById(\"react-container\")\n);\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n    };\n  }\n\n  nextID = () => {\n    this.uniqueID = this.uniqueID || 0;\n    return this.uniqueID++;\n  };\n  add = (text) => {\n    let notes = [...this.state.notes, { id: this.nextID(), note: text }];\n    this.setState({ notes });\n  };\n\n  update = (newText, id) => {\n    let notes = this.state.notes.map((note) =>\n      note.id !== id\n        ? note\n        : {\n            ...note,\n            note: newText,\n          }\n    );\n    this.setState({ notes });\n  };\n  remove = (id) => {\n    let notes = this.state.notes.filter((note) => note.id !== id);\n    this.setState({ notes });\n  };\n\n  eachNote = (note) => {\n    return (\n      <Note\n        key={note.id}\n        id={note.id}\n        onChange={this.update}\n        onRemove={this.remove}\n      >\n        {note.note}\n      </Note>\n    );\n  };\n  render() {\n    return (\n      <div className=\"board\">\n        {this.state.notes.map(this.eachNote)}\n        <button onClick={() => this.add()}>+</button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Board count=\"10\" />,\n  document.getElementById(\"react-container\")\n);\n"],"sourceRoot":""}