[{"/Users/tomas/Desktop/React/sticky/src/reportWebVitals.js":"1","/Users/tomas/Desktop/React/sticky/src/index.js":"2","/Users/tomas/Desktop/React/sticky/src/App.js":"3"},{"size":362,"mtime":1606664950000,"results":"4","hashOfConfig":"5"},{"size":2739,"mtime":1609428844000,"results":"6","hashOfConfig":"5"},{"size":2518,"mtime":1606667380000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1809oyt",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/tomas/Desktop/React/sticky/src/reportWebVitals.js",[],"/Users/tomas/Desktop/React/sticky/src/index.js",[],"/Users/tomas/Desktop/React/sticky/src/App.js",["15","16","17","18"],"class Note extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editing: false };\n  }\n\n  componentWillMount = () => {\n    this.style = {\n      right: this.randomBetween(0, window.innerWidth - 150, `px`),\n      top: this.randomBetween(0, window.innerHeight - 150, `px`),\n    };\n  };\n\n  randomBetween = (x, y, s) => {\n    return x + Math.ceil(Math.random() * (y - x)) + s;\n  };\n\n  edit = () => {\n    this.setState({ editing: true });\n  };\n  save = () => {\n    this.props.onChange(this.refs.newText.value, this.props.id);\n    this.setState({ editing: false });\n  };\n  delete = (id) => {\n    this.props.onRemove(this.props.id);\n  };\n\n  renderForm = () => {\n    return (\n      <div className=\"note\" style={this.style}>\n        <textarea ref=\"newText\"></textarea>\n        <button onClick={this.save}>Save</button>\n      </div>\n    );\n  };\n  renderDisplay = () => {\n    return (\n      <div className=\"note\" style={this.style}>\n        <p>{this.props.children}</p>\n        <span>\n          <button onClick={this.edit}>Edit</button>\n          <button onClick={this.delete}>X</button>\n        </span>\n      </div>\n    );\n  };\n\n  render() {\n    return this.state.editing ? this.renderForm() : this.renderDisplay();\n  }\n}\nReactDOM.render(\n  <Note>hello world</Note>,\n  document.getElementById(\"react-container\")\n);\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notes: [],\n    };\n  }\n\n  nextID = () => {\n    this.uniqueID = this.uniqueID || 0;\n    return this.uniqueID++;\n  };\n  add = (text) => {\n    let notes = [...this.state.notes, { id: this.nextID(), note: text }];\n    this.setState({ notes });\n  };\n\n  update = (newText, id) => {\n    let notes = this.state.notes.map((note) =>\n      note.id !== id\n        ? note\n        : {\n            ...note,\n            note: newText,\n          }\n    );\n    this.setState({ notes });\n  };\n  remove = (id) => {\n    let notes = this.state.notes.filter((note) => note.id !== id);\n    this.setState({ notes });\n  };\n\n  eachNote = (note) => {\n    return (\n      <Note\n        key={note.id}\n        id={note.id}\n        onChange={this.update}\n        onRemove={this.remove}\n      >\n        {note.note}\n      </Note>\n    );\n  };\n  render() {\n    return (\n      <div className=\"board\">\n        {this.state.notes.map(this.eachNote)}\n        <button onClick={() => this.add()}>+</button>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Board count=\"10\" />,\n  document.getElementById(\"react-container\")\n);\n",{"ruleId":"19","severity":2,"message":"20","line":1,"column":20,"nodeType":"21","messageId":"22","endLine":1,"endColumn":25},{"ruleId":"19","severity":2,"message":"23","line":53,"column":1,"nodeType":"21","messageId":"22","endLine":53,"endColumn":9},{"ruleId":"19","severity":2,"message":"20","line":58,"column":21,"nodeType":"21","messageId":"22","endLine":58,"endColumn":26},{"ruleId":"19","severity":2,"message":"23","line":113,"column":1,"nodeType":"21","messageId":"22","endLine":113,"endColumn":9},"no-undef","'React' is not defined.","Identifier","undef","'ReactDOM' is not defined."]